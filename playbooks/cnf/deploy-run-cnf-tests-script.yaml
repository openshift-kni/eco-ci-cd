---
## Disclaimer:
# This playbook is not officially supported and comes with no guarantees.
# Use it at your own risk. Ensure you test thoroughly in your environment
# before deploying to production.

# Ansible Playbook: Set up cnf-tests project
# -------------------------------------------------
# This playbook clones cnf-feature-deploy project and deploys all external dependencies
# based on given parameters. The playbook uses following algorithm:

# - Gathering cluster network information
# - Extracting OpenShift version details
# - Cloning the CNF test repository
# - Installing dependencies (e.g., Ginkgo)
# - Fetching branch details for required external components
# - Updating submodules
# - Listing CNF test image versions and extracts specific version
# - Listing dpdk-base image versions and extracts specific version
# - Preparing execution shell scripts

# Requirements:
# - OpenShift cluster
# - Bastion host
# - Ansible and the kubernetes.core collection installed.
# - A valid kubeconfig file for cluster authentication.

# Usage:
# Run this playbook using Ansible:
# ansible-playbook ./playbooks/cnf/deploy-run-cnf-tests-script.yaml -i ./inventories/cnf/run-tests.yaml \
#  --extra-vars kubeconfig=/path/to/kubeconfig
# Avaliable extra-vars(arguments)
#
# kubeconfig                        # string: Path to the kubeconfig file.
# container_registry                # string: Path to the container registry containing dpdk-base and openshift4-cnf-tests containers
# xt_u32test_host_non_cnf_workers   # bool: Whether to enable xt_u32test on non-CNF worker nodes
# ginkgo_additional_params          # string: Additional Ginkgo parameters
# features                          # string: List of features to test, separated by '|'
# role_worker_cnf                   # string: CNF role label
# cnf_test_dir                      # string: Path to the cnf-feature-deploy project
# sctp_host_non_cnf_workers         # bool: Whether SCTP is enabled for non-CNF worker nodes
# oo_install_ns                     # string: Namespace where MetalLB is deployed
# cnf_interfaces                    # string: List of CNF SR-IOV interfaces to be tested, separated by ','
# cnf_test_perf_test_profile        # string: Name of the pre-installed performance profile
# cnf_tests_skip                    # string: List of tests cases to be skiped

- name: Set up cnf-tests project
  hosts: bastion
  gather_facts: true
  vars:
    cnf_test_repo: "https://github.com/openshift-kni/cnf-features-deploy.git"
    cnf_test_dir: /tmp/
    cnftests_git_dest: cnf-features-deploy
    cnf_tests_skip: ""
    container_registry: "{{ internal_container_registry_name }}/openshift4"
    features: "sctp"
    role_worker_cnf: "workercnf"
    latest_minor_version: 21
  tasks:

    - name: Gather cluster network information
      register: cluster_info
      environment:
        K8S_AUTH_KUBECONFIG: "{{ kubeconfig }}"
      kubernetes.core.k8s_info:
        api: operator.openshift.io/v1
        kind: Network
        name: cluster

    - name: Extract OpenShift version details
      ansible.builtin.set_fact:
        version: "{{ cluster_info.resources[0].status.version.split('.')[0] }}.{{ cluster_info.resources[0].status.version.split('.')[1] }}"
        ocp_minor_version: "{{ cluster_info.resources[0].status.version.split('.')[1] }}"

    - name: Print cluster version
      ansible.builtin.debug:
        msg: "Cluster version: {{ version }}"

    - name: Set SRIOV_NODE_AND_DEVICE_NAME_FILTER env variable
      when: cnf_interfaces is defined and cnf_interfaces | length > 0
      block:
        - name: Get all worker nodes
          environment:
            K8S_AUTH_KUBECONFIG: "{{ kubeconfig }}"
          kubernetes.core.k8s_info:
            api_version: v1
            kind: Node
            label_selectors:
              - "node-role.kubernetes.io/worker"
          register: all_worker_nodes

        - name: Extract first worker node name and repalce digits by *
          ansible.builtin.set_fact:
            cnf_worker_name: >-
              {{ (all_worker_nodes.resources | list)[0].metadata.name | regex_replace('[0-9]', '.*') }}

    - name: Ensure 'junit' directory is absent
      ansible.builtin.file:
        path: "{{ cnf_test_dir }}/junit"
        state: absent

    - name: Ensure repository does not exist
      ansible.builtin.file:
        path: "{{ cnf_test_dir }}/{{ cnftests_git_dest }}"
        state: absent

    - name: Ensure report directory does not exist
      ansible.builtin.file:
        path: "{{ cnf_test_dir }}/report"
        state: absent

    - name: Ensure 'junit' directory exists
      ansible.builtin.file:
        path: "{{ cnf_test_dir }}/junit"
        state: directory
        mode: "0777"

    - name: Ensure 'report' directory exists
      ansible.builtin.file:
        path: "{{ cnf_test_dir }}/report"
        state: directory
        mode: "0777"

    - name: Set containers version
      vars:
        major: "{{ (version | split('.'))[0] }}"
        minor: "{{ (version | split('.'))[1] | int }}"
      ansible.builtin.set_fact:
        containers_version: "{{ (minor == (latest_minor_version | int)) | ternary(major ~ '.' ~ (minor - 1), version) }}"

    # TODO: Remove this block when OCP 4.14 reaches end-of-life
    - name: Run CNF tests via podman image. OCP < 4.15
      when:
        - ocp_minor_version|int < 15
      block:

        - name: Remove cnf-tests container
          containers.podman.podman_container:
            name: "cnf-container-tests"
            state: absent

        - name: Remove cnf-tests image
          containers.podman.podman_image:
            name: "{{ container_registry }}/cnf-tests-rhel8"
            state: absent
            tag: "{{ item }}"
          loop:
            - "v{{ containers_version }}"
            - "latest"

        - name: Pull cnf-tests image
          containers.podman.podman_image:
            name: "{{ container_registry }}/cnf-tests-rhel8"
            state: present
            tag: "v{{ containers_version }}"

        - name: Reset cnf_test_script_dir variable
          ansible.builtin.set_fact:
            cnf_test_script_dir: "{{ cnf_test_dir }}{{ cnftests_git_dest }}"

        - name: Ensure cnf_test_script_dir directory exists
          ansible.builtin.file:
            path: "{{ cnf_test_script_dir }}"
            state: directory
            mode: "0777"

        - name: Copy kubeconfig to cnf_test_script_dir
          ansible.builtin.copy:
            src: "{{ kubeconfig }}"
            dest: "{{ cnf_test_script_dir }}"
            remote_src: true
            mode: "0777"

        - name: Prepare CNF tests execution script
          ansible.builtin.template:
            src: run_cnf_tests_container.j2
            dest: "{{ cnf_test_script_dir }}/cnf-tests-run.sh"
            mode: "0764"
          vars:
            junit_report_path: /tmp/junit
            report_path: /tmp/report
            registry: "{{ container_registry }}"
            cnf_image_tag: "{{ container_registry }}/cnf-tests-rhel8:v{{ containers_version }}"

    - name: Run CNF tests via makefile. OCP >= 4.15
      when:
        - ocp_minor_version|int >= 15
      block:
        - name: Clone cnf-feature-deploy project
          block:
            - name: Git clone cnf-feature-deploy repo specific branch
              ansible.builtin.git:
                repo: "{{ cnf_test_repo }}"
                dest: "{{ cnf_test_dir }}/{{ cnftests_git_dest }}"
                force: true
                update: true
                depth: 1
                recursive: true
                version: "release-{{ version }}"
              register: cnftests_git_clone
              retries: 3
              delay: 5
              until: cnftests_git_clone is not failed

          rescue:
            - name: Git clone cnf-feature-deploy repo master branch
              ansible.builtin.git:
                repo: "{{ cnf_test_repo }}"
                dest: "{{ cnf_test_dir }}/{{ cnftests_git_dest }}"
                force: true
                update: true
                depth: 1
                recursive: true
                version: "master"
              register: cnftests_master_git_clone
              retries: 3
              delay: 5
              until: cnftests_master_git_clone is not failed

        - name: Install Ginkgo v2
          changed_when: false
          ansible.builtin.shell: |
            go install {{ ginkgo_link | default('github.com/onsi/ginkgo/v2/ginkgo@v2.23.3') }}
          environment:
            PATH: "/usr/local/go/bin:{{ ansible_env.PATH }}"

        - name: Get branch information from MetalLB project
          ansible.builtin.uri:
            url: "https://github.com/openshift/metallb-operator/tree/release-{{ version }}"
            method: GET
          register: metallb_github_response

        - name: Set MetalLB branch variable based on existence
          ansible.builtin.set_fact:
            dynamic_metallb_branch: "{{ 'release-' + version if metallb_github_response.status == 200 else 'main' }}"

        - name: Get branch information from SR-IOV project
          ansible.builtin.uri:
            url: "https://github.com/openshift/sriov-network-operator/tree/release-{{ version }}"
            method: GET
          register: sriov_github_response

        - name: Set SR-IOV branch variable based on existence
          ansible.builtin.set_fact:
            dynamic_sriov_branch: "{{ 'release-' + version if sriov_github_response.status == 200 else 'master' }}"

        - name: Get branch information from Node Tuning operator project
          ansible.builtin.uri:
            url: "https://github.com/openshift/cluster-node-tuning-operator/tree/release-{{ version }}"
            method: GET
          register: tuning_github_response

        - name: Set Node Tuning operator branch variable based on existence
          ansible.builtin.set_fact:
            dynamic_tuning_branch: "{{ 'release-' + version if tuning_github_response.status == 200 else 'master' }}"

        - name: Update all submodules # noqa command-instead-of-module
          changed_when: false
          environment:
            METALLB_OPERATOR_TARGET_COMMIT: "{{ dynamic_metallb_branch }}"
            SRIOV_NETWORK_OPERATOR_TARGET_COMMIT: "{{ dynamic_sriov_branch }}"
            CLUSTER_NODE_TUNING_OPERATOR_TARGET_COMMIT: "{{ dynamic_tuning_branch }}"
            PATH: "/usr/local/go/bin:{{ ansible_env.PATH }}"
          ansible.builtin.shell: |
            git submodule update --init --force
            cnf-tests/hack/init-git-submodules.sh
          args:
            chdir: "{{ cnf_test_dir }}/{{ cnftests_git_dest }}"

        - name: Print dpdk-base image version
          ansible.builtin.debug:
            msg: dpdk-base-rhel{{ '8' if (version.split('.')[1] | int < 20) else '9' }}:v{{ containers_version }}

        - name: Print cnf_tests_version image version
          ansible.builtin.debug:
            msg: dpdk-base-rhel{{ '8' if (version.split('.')[1] | int < 16) else '9' }}:v{{ containers_version }}

        - name: Prepare execute shell script
          ansible.builtin.template:
            src: run_cnf_tests.j2
            dest: "{{ cnf_test_dir }}/{{ cnftests_git_dest }}/cnf-tests-run.sh"
            mode: "0764"
