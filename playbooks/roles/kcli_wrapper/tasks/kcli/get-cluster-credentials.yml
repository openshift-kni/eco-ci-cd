---
- name: Cluster credentials
  when: kcli_wrp_credentials.clusters_details is defined and
        kcli_wrp_credentials.kubeconfig is defined and
        kcli_wrp_credentials.kubeadmin_password is defined
  block:

    - name: Save original kubeconfig file
      when: kcli_wrp_socks5_proxy.host is defined and
            kcli_wrp_socks5_proxy.listen_port is defined
      ansible.builtin.copy:
        src: "{{ kcli_wrp_credentials.clusters_details }}/{{ cluster.parameters.cluster }}/{{ kcli_wrp_credentials.kubeconfig }}"
        dest: "{{ kcli_wrp_credentials.clusters_details }}/{{ cluster.parameters.cluster }}/{{ kcli_wrp_credentials.kubeconfig }}.original"
        remote_src: yes
      loop: "{{ kcli_wrp.clusters }}"
      loop_control:
        loop_var: cluster

    - name: Add proxy-url field to each kubeconfig file
      when: kcli_wrp_socks5_proxy.host is defined and
            kcli_wrp_socks5_proxy.listen_port is defined
      ansible.builtin.lineinfile:
        path: "{{ kcli_wrp_credentials.clusters_details }}/{{ cluster.parameters.cluster }}/{{ kcli_wrp_credentials.kubeconfig }}"
        state: present
        regexp: '^([ \t]*)(server: https://.*:6443$)'
        line: '\1\2\n\1proxy-url: socks5://{{ kcli_wrp_socks5_proxy.host }}:{{ kcli_wrp_socks5_proxy.listen_port }}'
        backrefs: yes
      loop: "{{ kcli_wrp.clusters }}"
      loop_control:
        loop_var: cluster

    - name: Get pass and credential file (both in plain text and base64)
      ansible.builtin.shell: |-
        KC_FILE={{ kcli_wrp_credentials.clusters_details }}/{{ cluster.parameters.cluster }}/{{ kcli_wrp_credentials.kubeconfig }}
        KADM_FILE={{ kcli_wrp_credentials.clusters_details }}/{{ cluster.parameters.cluster }}/{{ kcli_wrp_credentials.kubeadmin_password }}
        if [[ -f ${KC_FILE} && -f ${KADM_FILE} ]];then
          B64_KC=$(cat ${KC_FILE} | base64 -w 0)
          KADM_PASS=$(cat ${KADM_FILE})
          echo "{{ cluster.parameters.cluster }}"
          echo "${B64_KC}"
          echo "${KADM_PASS}"
        fi
      register: _clusters_creds
      loop: "{{ kcli_wrp.clusters }}"
      loop_control:
        loop_var: cluster

    - name: Restore original kubeconfig file and rename via proxy one
      when: kcli_wrp_socks5_proxy.host is defined and
            kcli_wrp_socks5_proxy.listen_port is defined
      ansible.builtin.shell: |-
        KC_FILE_ORIGINAL={{ kcli_wrp_credentials.clusters_details }}/{{ cluster.parameters.cluster }}/{{ kcli_wrp_credentials.kubeconfig }}.original
        KC_FILE_VIA_PROXY={{ kcli_wrp_credentials.clusters_details }}/{{ cluster.parameters.cluster }}/{{ kcli_wrp_credentials.kubeconfig }}
        mv -v ${KC_FILE_VIA_PROXY} ${KC_FILE_VIA_PROXY}-via-socks5-proxy
        mv -v ${KC_FILE_ORIGINAL} ${KC_FILE_VIA_PROXY}
      loop: "{{ kcli_wrp.clusters }}"
      loop_control:
        loop_var: cluster

    - name: Get cluster credential
      ansible.builtin.set_fact:
        kcli_wrp_credentials: |-
          {% set _credentials_by_cluster_name = {} %}
          {% for k in _clusters_creds.results if (k.stdout_lines | length) == 3 %}
          {%   set cluster_name = k.stdout_lines.0 %}
          {%   set b64_kc =  k.stdout_lines.1 %}
          {%   set kc = (b64_kc | b64decode | from_yaml) %}
          {%   set kadm_pass = k.stdout_lines.2 %}
          {%   set cluster_cred = { cluster_name: {"kubeconfig": kc, "b64_kubeconfig": b64_kc, "kubeadmin_password": kadm_pass}} %}
          {%   set _ = _credentials_by_cluster_name.update(cluster_cred) %}
          {% endfor %}
          {{  _credentials_by_cluster_name  }}

