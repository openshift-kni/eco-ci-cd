---
# Ansible Playbook Extra Variables Example
#
# This file provides an example structure for an Ansible extra variables file
# to be used with the 'test_report_send.yml' or other playbooks invoking the roles:
#   - `redhatci.ocp.test_send_report`
#   - `redhatci.ocp.junit2json`
#
# IMPORTANT:
# - All variable lines below are intentionally commented out and contain
#   placeholder or invalid data.
# - You MUST manually uncomment and update the variables with your specific
#   valid information before running the playbook.
# - For credentials like tokens and URLs, it is STRONGLY recommended to use
#   Ansible Vault or other secrets management tools (e.g., HashiCorp Vault,
#   Bitwarden) instead of plain text in this file.
#
# ------------------------------------------------------------------------------
# Instructions for use:
# 1. Copy this file to a new file (e.g., my.variables.yml).
# 2. Uncomment the lines for the variables you need to set.
# 3. Replace the placeholder values with your actual data.
# 4. For credentials (splunk_url, splunk_token, splunk_channel), consider
#    fetching them from a secure vault at runtime or ensure this file is
#    properly secured if you must define them here.
# 5. The 'test_report_send' role automatically detects 'splunk_source' and
#    'trs_ci_system' on supported CI/CD environments. Setting them here
#    might override the auto-detection, which is generally not recommended
#    unless specifically needed for testing or a non-standard setup.
# ------------------------------------------------------------------------------

##################################
# Splunk HEC Credentials & Configuration
#
# These variables are related to sending data to Splunk via HEC (HTTP Event Collector).
# splunk_url, splunk_token, and splunk_channel are considered credentials.
# It is highly recommended to manage splunk_token using Ansible Vault or a similar secrets manager.
##################################

# splunk_url: "https://your-splunk-hec.example.com/services/collector/event" # MANDATORY if sending to Splunk. The Splunk HEC endpoint URL.
# splunk_token: "00000000-0000-0000-0000-000000000000" # MANDATORY if sending to Splunk. The actual Splunk HEC token. PLEASE UPDATE from vault/secrets manager.
# splunk_channel: "00000000-0000-0000-0000-000000000000" # MANDATORY if sending to Splunk. The Splunk channel/GUID.
# splunk_index: "your_custom_index" # OPTIONAL. The Splunk index to send data to. If not set, it might use a default configured on the HEC token or Splunk.

##################################
# CI System and Test Report Paths
#
# Configure the source of the test reports and associated metadata.
#
# Variables automatically detected by 'redhatci.ocp.test_report_send' role (usually no need to set manually):
# 1. Typically auto-detected (e.g., Jenkins URL, DCI instance). Overriding might be needed for specific cases.
# splunk_source: "https://ci-system-hostname.example.com"
# 2. Typically auto-detected as 'jenkins', 'dci', etc. Overriding might be needed for specific cases or local testing.
# trs_ci_system: "autodetected_ci_system"
#
# Select and uncomment ONE of the following Options (Jenkins or DCI) based on your CI system.
# Provide the paths to your JUnit XML report files and metadata file.
##################################

## Option 1: Jenkins CI
# trs_ci_system: "jenkins" # Uncomment if overriding auto-detection or for local runs.
# NOTE: playbook_dir is not necessary
# junit2_input_reports_list:
#   - "{{ playbook_dir }}/path/to/your/jenkins/report1.xml"
#   - "{{ playbook_dir }}/path/to/your/jenkins/report2.xml"
#   # Add more report paths as needed
# trs_metadata_path: "{{ playbook_dir }}/path/to/your/jenkins/metadata.json"

## Option 2: DCI (Distributed CI)
# trs_ci_system: "dci" # Uncomment if overriding auto-detection or for local runs.
# NOTE: playbook_dir is not necessary
# junit2_input_reports_list:
#   - "{{ playbook_dir }}/path/to/your/dci/job-id/report_file_name.xml"
#   - "{{ playbook_dir }}/path/to/your/dci/job-id/another_report_file.xml"
#   # Add more report paths as needed
# trs_metadata_path: "{{ playbook_dir }}/path/to/your/dci/job-id/metadata.json"

##################################
# Temporary Output Configuration
#
# Defines where processed files or temporary data might be stored.
##################################
# junit2_output_dir: "{{ playbook_dir }}/output_data" # Directory for any output generated by the junit2json processing. Defaults exist.
